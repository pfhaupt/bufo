//! THIS IS A TEST PROGRAM
//! RUNTIME
//! SUCCESS

import "prelude.bufo";

func xor_i32() -> i32 {
    let a: i32 = 178;
    let b: i32 = 147;
    if ((a ^ b) != 33) return 1;
    if ((a ^ b) != (b ^ a)) return 2;
    return 0;
}
func xor_u32() -> u32 {
    let a: u32 = 178;
    let b: u32 = 147;
    if ((a ^ b) != 33) return 1;
    if ((a ^ b) != (b ^ a)) return 2;
    return 0;
}
func xor_i64() -> i64 {
    let a: i64 = 178;
    let b: i64 = 147;
    if ((a ^ b) != 33) return 1;
    if ((a ^ b) != (b ^ a)) return 2;
    return 0;
}
func xor_u64() -> u64 {
    let a: u64 = 178;
    let b: u64 = 147;
    if ((a ^ b) != 33) return 1;
    if ((a ^ b) != (b ^ a)) return 2;
    return 0;
}
func xor_ident() -> u32 {
    let a: u32 = 19803;
    let b: u32 = 12093;
    let expected: u32 = 25190;
    if ((a ^ b) != expected) return 1;
    if ((a ^ b) != (b ^ a)) return 2;
    if ((a ^ a) != (a ^ a)) return 3;
    if ((a ^ a ^ a) != (a ^ a ^ a)) return 4;
    if ((b ^ b) != (b ^ b)) return 5;
    if ((b ^ b ^ b) != (b ^ b ^ b)) return 6;
    return 0;
}

func main(argc: i32, argv: &&char) -> i32 {
    assert(xor_i32() == 0);
    assert(xor_u32() == 0);
    assert(xor_i64() == 0);
    assert(xor_u64() == 0);
    assert(xor_ident() == 0);
    return 0;
}
