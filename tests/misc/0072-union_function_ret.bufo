//! THIS IS A TEST PROGRAM
//! RUNTIME
//! SUCCESS

import "prelude.bufo";

union Foo {
    A(u64, u64),
    B,
    C { c: i32 },
}

func get(i: i32) -> Foo {
    if (i == 0) return Foo::A(12, 13);
    if (i == 1) return Foo::B;
    if (i == 2) return Foo::C { c: 14 };
    unreachable();
}

func main(argc: i32, argv: &&char) -> i32 {
    let a = get(0);
    let b = get(1);
    let c = get(2);
    // Tag is always the first byte
    assert(*(&a as &u8) == 0);
    assert(*(&b as &u8) == 1);
    assert(*(&c as &u8) == 2);
    return 0;
}
