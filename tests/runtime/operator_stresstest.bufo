//! THIS IS A TEST PROGRAM
//! RUNTIME
//! SUCCESS

import "prelude.bufo";

func test_easy() -> i32 {
    let a: i32 = 5;
    let b: i32 = 3;
    let c: i32 = 2;
    let d: i32 = 4;

    let sum: i32 = (a + b) * (c - d) + (b * c);
    let difference: i32 = ((a - c) * d) - (b + d) / c;
    let product: i32 = (a * b) + (c * d) - (a / c);
    let quotient: i32 = ((a + b) / c) * (d - a) + (b / d);

    if ((a + b) * (c - d) + (b * c) != sum) {
        return 1;
    }
    if (((a - c) * d) - (b + d) / c != difference) {
        return 1;
    }
    if ((a * b) + (c * d) - (a / c) != product) {
        return 1;
    }
    if (((a + b) / c) * (d - a) + (b / d) != quotient) {
        return 1;
    }

    return 0;
}

func test_medium() -> i32 {
    let a: i32 = 5;
    let b: i32 = 3;
    let c: i32 = 2;
    let d: i32 = 4;
    let e: i32 = 6;
    let f: i32 = 7;
    let g: i32 = 8;

    let sum: i32 = (((a + b) * (c - d) + (b * c)) / (e - f) + g) * (d + (a * b) - (c / e));
    let difference: i32 = ((((a - c) * d) - (b + d) / c) + (e * f) - g) * ((a + b) / (d - e));
    let product: i32 = (((a * b) + (c * d) - (a / c)) * (e + f) + (g - b)) / (d - (a * f));
    let quotient: i32 = ((((a + b) / c) * (d - a) + (b / d)) - (e * f) + (g / a)) / ((b + c) - (d * e));

    if (((((a + b) * (c - d) + (b * c)) / (e - f) + g) * (d + (a * b) - (c / e))) != sum) {
        return 1;
    }
    if ((((((a - c) * d) - (b + d) / c) + (e * f) - g) * ((a + b) / (d - e))) != difference) {
        return 1;
    }
    if (((((a * b) + (c * d) - (a / c)) * (e + f) + (g - b)) / (d - (a * f))) != product) {
        return 1;
    }
    if ((((((a + b) / c) * (d - a) + (b / d)) - (e * f) + (g / a)) / ((b + c) - (d * e))) != quotient) {
        return 1;
    }
    return 0;
}

func test_hard() -> i32 {
    let a: i32 = 5;
    let b: i32 = 3;
    let c: i32 = 2;
    let d: i32 = 4;
    let e: i32 = 6;
    let f: i32 = 7;
    let g: i32 = 8;
    let h: i32 = 9;
    let i: i32 = 10;

    let sum: i32 = (((a + b * c - d) / (e + f - g * h) + i) * (d - a + (b / c)) + h) / (g - (f * e));
    let difference: i32 = ((((a * d - c / b) + e) * (f - g + h)) / (i - a * b) + d) / (e + (f - g));
    let product: i32 = (((a + b - (c * d) / e) * (f + g) - h) * (i / a) + b) * (c - (d + e) / f);
    let quotient: i32 = (((a * b + c - d / e) / (f + g - h * i)) * (a - b + c) + d) / (e - (f * g));

    if (((((a + b * c - d) / (e + f - g * h) + i) * (d - a + (b / c)) + h) / (g - (f * e))) != sum) {
        return 1;
    }
    if ((((((a * d - c / b) + e) * (f - g + h)) / (i - a * b) + d) / (e + (f - g))) != difference) {
        return 1;
    }
    if (((((a + b - (c * d) / e) * (f + g) - h) * (i / a) + b) * (c - (d + e) / f)) != product) {
        return 1;
    }
    if (((((a * b + c - d / e) / (f + g - h * i)) * (a - b + c) + d) / (e - (f * g))) != quotient) {
        return 1;
    }

    return 0;
}

func test_extreme() -> i32 {
    let a: i32 = 1; let b: i32 = 2; let c: i32 = 3; let d: i32 = 4; let e: i32 = 5;
    let f: i32 = 6; let g: i32 = 7; let h: i32 = 8; let i: i32 = 9; let j: i32 = 10;
    let k: i32 = 11; let l: i32 = 12; let m: i32 = 13; let n: i32 = 14; let o: i32 = 15;
    let p: i32 = 16; let q: i32 = 17; let r: i32 = 18; let s: i32 = 19; let t: i32 = 20;

    let sum: i32 = (((((a + b) * (c - d) + (e / f)) - (g * h) + i) / ((j - k) * (l + m)) - ((n / o) + (p * q)) - r) * (s - t)) + (((a * b) - (c / d)) + (e * f));
    let difference: i32 = ((((((a - b) * (c * d)) - ((e + f) * (g - h))) + i) * ((j * k) - (l * m))) + ((n - o) * ((p + q) * r))) - (((s * t) + (a * b)) - (c * d)) + (e - f);
    let product: i32 = (((((a * b) - (c / d)) + ((e + f) * (g / h))) - i) / ((j * k) + (l - m))) * (((n + o) - (p / q)) * r) + (((s / t) - (a - b)) + (c * d)) * (e / f);
    let quotient: i32 = ((((((a / b) + ((c - d) * (e * f))) - g) / ((h + i) * (j - k))) + (l / m)) - ((n * o) + (p - q))) / (((r * s) * t) - ((a * b) + (c / d))) - (e + f);

    if (sum != (((((a + b) * (c - d) + (e / f)) - (g * h) + i) / ((j - k) * (l + m)) - ((n / o) + (p * q)) - r) * (s - t)) + (((a * b) - (c / d)) + (e * f))) {
        return 1;
    }
    if (difference != ((((((a - b)*(c * d))-((e + f)*(g - h)))+i)*((j* k)-(l * m)))+((n - o)*((p + q)*r)))-(((s * t)+(a * b))-(c * d))+(e - f)) {
        return 1;
    }
    if (product != (((((a * b) - (c / d)) + ((e + f) * (g / h))) - i) / ((j * k) + (l - m))) * (((n + o) - (p / q)) * r) + (((s / t) - (a - b)) + (c * d)) * (e / f)) {
        return 1;
    }
    if (quotient != ((((((a / b) + ((c - d) * (e * f))) - g) / ((h + i) * (j - k))) + (l / m)) - ((n * o) + (p - q))) / (((r * s) * t) - ((a * b) + (c / d))) - (e + f)) {
        return 1;
    }

    return 0;

}

func main(argc: i32, argv: &&char) -> i32 {
    assert(test_easy() == 0);
    assert(test_medium() == 0);
    assert(test_hard() == 0);
    assert(test_extreme() == 0);
    return 0;
}
