
import "prelude.bufo";
import "libc.bufo";


// TODO: Structs in modules don't work yet
struct Color {
    r: u8;
    g: u8;
    b: u8;
    a: u8;
}
module raylib {
    @os(WINDOWS)
    config {
        library: "raylib",
        libpath: "./raylib/lib",
        library: "OpenGL32",
        library: "msvcrt",
        library: "Gdi32",
        library: "WinMM",
        library: "kernel32",
        library: "shell32",
        library: "User32",
        linker: "/NODEFAULTLIB:libcmt",
    }
    @extern("InitWindow") func InitWindow(width: i32, height: i32, title: &char);
    @extern("InitAudioDevice") func InitAudioDevice();
    @extern("WindowShouldClose") func WindowShouldClose() -> bool;
    @extern("BeginDrawing") func BeginDrawing();
    @extern("EndDrawing") func EndDrawing();
    @extern("ClearBackground") func ClearBackground(c: Color);

    func test() {
        // TODO: Lookup doesn't check the current module
        raylib.InitWindow(800, 600, "hello from bufo");
        while (!raylib.WindowShouldClose()) {
            raylib.BeginDrawing();
            raylib.ClearBackground(Color { r: 51, g: 51, b: 51, a: 255 });
            raylib.EndDrawing();
        }
    }
}
module other {
    // Doesn't work because this module doesn't have a config
    // @extern("BeginDrawing") func BeginDrawing();
}

func main(argc: i32, argv: &&char) -> i32 {
    printf("works on my machine! :Clueless:\n");
    raylib.test();
    (comptime raylib.test()); // soon :tm:
    return 0;
}

