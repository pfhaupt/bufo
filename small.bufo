
@extern("printf") func p(fmt: &char, ...) -> i32;
@noreturn @extern("exit") func e(code: i32);

@os(WINDOWS)
comptime foo: i32 = 1;
@os(LINUX)
comptime foo: i32 = 2;

@noreturn func unreachable(m: &char) {
    p(m);
    p("hello\n");
    e(1);
}

func foo() -> i32 {
    p("yes\n");
    @os(WINDOWS) return 1;
    @os(LINUX) return 2;
    p("no\n");
    return 3;
}

func main(argc: i32, argv: &&char) -> i32 {
    p("Hello World!\n");
    p("%u\n", argc);
    @os(WINDOWS) {
        if (foo != 1) return 1;
    }
    if (foo() != 1) {
        p("fuck\n");
        return 2;
    }
    e(10);
    @os(LINUX) {
        assert(foo == 2);
        p("And a print, because we can!\n");
    }
    return 0;
}
